---
AWSTemplateFormatVersion: 2010-09-09
Description: >
  This template creates the S3 buckets used to host the staging/production
  versions of the home Ember app.

Mappings:
  Beanstalk2Route53HostedZoneId:
    us-east-1:
      HostedZoneId: Z3DZXE0Q79N41H
    us-west-1:
      HostedZoneId: Z1M58G0W56PQJA
    us-west-2:
      HostedZoneId: Z33MTJ483KN6FU
    eu-west-1:
      HostedZoneId: Z3NF1Z3NOM5OY2
    ap-northeast-1:
      HostedZoneId: Z2YN17T5R711GT
    ap-southeast-1:
      HostedZoneId: Z1WI8VXHPB1R38
    sa-east-1:
      HostedZoneId: Z2ES78Y61JGQKS

Parameters:
  DomainName:
    Description: Naked Domain, this needs to be verified on Route 53 first.
    Type: String
    Default: theapothecaryshoppe.com

  DasherizedName:
    Description: Dasherized name to prefix S3 buckets with
    Type: String
    Default: the-apothecary-shoppe

Resources:
  StagingSSLCertificate: 
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Sub staging.${DomainName}

  ProductionSSLCertificate: 
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Sub www.${DomainName}

  CIUser:
    Type: AWS::IAM::User
    Properties:
      UserName: ci-the-apothecary-shoppehome-web
      Policies:
        - PolicyName: ci-home-web
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${DasherizedName}-home-web-staging
                  - !Sub arn:aws:s3:::${DasherizedName}-home-web-production
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource:
                  - !Sub arn:aws:s3:::${DasherizedName}-home-web-staging/*
                  - !Sub arn:aws:s3:::${DasherizedName}-home-web-production/*

  NakedDomainS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DomainName
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Sub www.${DomainName}
          Protocol: https

  NakedDomainApexRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub ${DomainName}.
      Comment: Zone apex alias target at naked domain s3 bucket
      RecordSets:
        - Name: !Sub ${DomainName}.
          Type: A
          AliasTarget:
            DNSName: !Sub s3-website-${AWS::Region}.amazonaws.com
            # Name of Hosted Zone ID for us-east-1 from
            # http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints
            HostedZoneId: Z3AQBSTGFYJSTF

  StagingS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: !Sub ${DasherizedName}-home-web-staging
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  ProductionS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: !Sub ${DasherizedName}-home-web-production
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  FastbootBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: FastbootBucket

  Fastboot:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      Description: Production fastboot

  FastbootVersion:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName:
        Ref: Fastboot
      Description: Fastboot version
      SourceBundle:
        S3Bucket: FastbootBucket
        S3Key: fastboot-aws.zip

  ProductionConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName:
        Ref: Fastboot
      Description: Configuration for Production Fastboot
      OptionSettings:
      - Namespace: aws:autoscaling:asg
        OptionName: MinSize
        Value: '1'
      - Namespace: aws:autoscaling:asg
        OptionName: MaxSize
        Value: '2'
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: EnvironmentType
        Value: LoadBalanced
      - Namespace: aws:elasticbeanstalk:application:environment
        OptionName: FASTBOOT_S3_BUCKET
        Value: ProductionS3Bucket
      - Namespace: aws:elasticbeanstalk:application:environment
        OptionName: FASTBOOT_S3_KEY
        Value: fastboot-deploy-info.json
      SolutionStackName: 64bit Amazon Linux 2016.09 v4.0.0 running Node.js

  StagingConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName:
        Ref: Fastboot
      Description: Configuration for Staging Fastboot
      OptionSettings:
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: EnvironmentType
        Value: SingleInstance
      - Namespace: aws:elasticbeanstalk:application:environment
        OptionName: FASTBOOT_S3_BUCKET
        Value: StagingS3Bucket
      - Namespace: aws:elasticbeanstalk:application:environment
        OptionName: FASTBOOT_S3_KEY
        Value: fastboot-deploy-info.json
      SolutionStackName: 64bit Amazon Linux 2016.09 v4.0.0 running Node.js

  ProductionEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName:
        Ref: Fastboot
      EnvironmentName: "production"
      Description: AWS ElasticBeanstalk Sample Environment
      TemplateName:
        Ref: ProductionConfigurationTemplate
      VersionLabel:
        Ref: FastbootVersion

  StagingEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName:
        Ref: Fastboot
      EnvironmentName: "staging"
      Description: AWS ElasticBeanstalk Sample Environment
      TemplateName:
        Ref: StagingConfigurationTemplate
      VersionLabel:
        Ref: FastbootVersion

  #https://blog.jayway.com/2016/06/02/route53-configuration-elastic-beanstalk/
  StagingRoute53Record:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub ${DomainName}.
      RecordSets:
      - Name: !Sub staging.${DomainName}
        Type: A
        AliasTarget:
          HostedZoneId: !FindInMap [ Beanstalk2Route53HostedZoneId, !Ref "AWS::Region", HostedZoneId ]
          DNSName: !GetAtt StagingEnvironment.EndpointURL

  ProductionRoute53Record:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub ${DomainName}.
      RecordSets:
      - Name: !Sub www.${DomainName}
        Type: A
        AliasTarget:
          HostedZoneId: !FindInMap [ Beanstalk2Route53HostedZoneId, !Ref "AWS::Region", HostedZoneId ]
          DNSName: !GetAtt ProductionEnvironment.EndpointURL

Outputs:
  CIUser:
    Description: ARN of ci-home-web IAM user
    Value: !GetAtt CIUser.Arn
